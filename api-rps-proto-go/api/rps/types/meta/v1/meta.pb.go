// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rps/types/meta/v1/meta.proto

package metav1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Meta object embedded by all HP Horizon resource types.
// Meta object is Read-Only and always created by the server.
type Meta struct {
	// CreatedTime time the resource was initially created.
	CreatedTime *time.Time `protobuf:"bytes,1,opt,name=created_time,json=createdTime,proto3,stdtime" json:"created_time,omitempty"`
	// UpdatedTime time the resource was last updated.
	UpdatedTime *time.Time `protobuf:"bytes,2,opt,name=updated_time,json=updatedTime,proto3,stdtime" json:"updated_time,omitempty"`
	// DeletedTime time the resource was deleted.
	DeletedTime *time.Time `protobuf:"bytes,3,opt,name=deleted_time,json=deletedTime,proto3,stdtime" json:"deleted_time,omitempty"`
	// Version increments by 1 on every update.
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// RequestID for the server to track duplicate requests.
	RequestID string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *Meta) Reset()      { *m = Meta{} }
func (*Meta) ProtoMessage() {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_273d85c460d0b65b, []int{0}
}
func (m *Meta) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return m.Size()
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetCreatedTime() *time.Time {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Meta) GetUpdatedTime() *time.Time {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

func (m *Meta) GetDeletedTime() *time.Time {
	if m != nil {
		return m.DeletedTime
	}
	return nil
}

func (m *Meta) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Meta) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func init() {
	proto.RegisterType((*Meta)(nil), "rps.types.meta.v1.Meta")
}

func init() { proto.RegisterFile("rps/types/meta/v1/meta.proto", fileDescriptor_273d85c460d0b65b) }

var fileDescriptor_273d85c460d0b65b = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x3f, 0xcf, 0xd3, 0x30,
	0x10, 0xc6, 0xe3, 0xb4, 0x80, 0x9a, 0x96, 0xa1, 0x15, 0x43, 0x54, 0x21, 0xb7, 0x62, 0xea, 0x40,
	0x6d, 0x05, 0x46, 0x26, 0x42, 0x97, 0x22, 0x90, 0xaa, 0xa8, 0xea, 0x80, 0x2a, 0x55, 0xf9, 0x63,
	0xd2, 0x88, 0x06, 0x1b, 0xc7, 0x89, 0x28, 0x13, 0x1f, 0xa1, 0x5f, 0x80, 0x85, 0x09, 0xf1, 0x49,
	0x10, 0x53, 0xc7, 0x4e, 0x40, 0xdd, 0x85, 0xb1, 0x1f, 0xe1, 0x95, 0x9d, 0xe4, 0xed, 0xf0, 0x2e,
	0x9d, 0xce, 0xf7, 0xdc, 0x73, 0x3f, 0xeb, 0x74, 0x67, 0x3d, 0xe6, 0x2c, 0xc3, 0x62, 0xcb, 0x48,
	0x86, 0x53, 0x22, 0x7c, 0x5c, 0x38, 0x3a, 0x22, 0xc6, 0xa9, 0xa0, 0xbd, 0x2e, 0x67, 0x19, 0xd2,
	0x55, 0xa4, 0xd5, 0xc2, 0xe9, 0x3f, 0x8a, 0x69, 0x4c, 0x75, 0x15, 0xab, 0x57, 0x69, 0xec, 0x0f,
	0x62, 0x4a, 0xe3, 0x0d, 0xc1, 0x3a, 0x0b, 0xf2, 0xf7, 0x58, 0x24, 0x29, 0xc9, 0x84, 0x9f, 0xb2,
	0xd2, 0xf0, 0xe4, 0x9b, 0x69, 0x35, 0xdf, 0x12, 0xe1, 0xf7, 0x5e, 0x59, 0x9d, 0x90, 0x13, 0x5f,
	0x90, 0x68, 0xa5, 0x3c, 0x36, 0x18, 0x82, 0x51, 0xfb, 0x59, 0x1f, 0x95, 0x00, 0x54, 0x03, 0xd0,
	0xbc, 0x06, 0xb8, 0xcd, 0xdd, 0xdf, 0x01, 0xf0, 0xda, 0x55, 0x97, 0xd2, 0x15, 0x24, 0x67, 0xd1,
	0x05, 0x62, 0x5e, 0x0b, 0xa9, 0xba, 0x6a, 0x48, 0x44, 0x36, 0xe4, 0x16, 0xd2, 0xb8, 0x16, 0x52,
	0x75, 0x69, 0x88, 0x6d, 0x3d, 0x28, 0x08, 0xcf, 0x12, 0xfa, 0xd1, 0x6e, 0x0e, 0xc1, 0xa8, 0xe1,
	0xd5, 0x69, 0xef, 0xa9, 0x65, 0x71, 0xf2, 0x29, 0x27, 0x99, 0x58, 0x25, 0x91, 0x7d, 0x6f, 0x08,
	0x46, 0x2d, 0xf7, 0xa1, 0xfc, 0x33, 0x68, 0x79, 0xa5, 0x3a, 0x9d, 0x78, 0xad, 0xca, 0x30, 0x8d,
	0xdc, 0x03, 0xd8, 0x1f, 0xa1, 0x71, 0x38, 0x42, 0xe3, 0x7c, 0x84, 0xe0, 0xab, 0x84, 0xe0, 0x87,
	0x84, 0xe0, 0x97, 0x84, 0x60, 0x2f, 0x21, 0xf8, 0x27, 0x21, 0xf8, 0x2f, 0xa1, 0x71, 0x96, 0x10,
	0xec, 0x4e, 0xd0, 0xd8, 0x9f, 0xa0, 0x71, 0x38, 0x41, 0xc3, 0xb2, 0x43, 0x9a, 0xa2, 0xcb, 0x92,
	0x36, 0x49, 0xc0, 0x7d, 0xbe, 0x45, 0x85, 0xe3, 0x76, 0x5c, 0x4a, 0x3f, 0xbc, 0x64, 0xc9, 0x4c,
	0x8d, 0x31, 0x03, 0xef, 0x5e, 0xc7, 0x89, 0x58, 0xe7, 0x01, 0xf2, 0xbf, 0x84, 0x88, 0x7c, 0x16,
	0x68, 0xcd, 0x50, 0x48, 0x53, 0xbc, 0x66, 0x63, 0x75, 0x01, 0x3e, 0x4b, 0x54, 0x1c, 0xeb, 0xa1,
	0xc7, 0x31, 0x55, 0x02, 0xbe, 0x73, 0x1a, 0x2f, 0x54, 0x2c, 0x9c, 0xef, 0x66, 0xc3, 0x9b, 0xbc,
	0xf9, 0x69, 0x76, 0x3d, 0x96, 0xa1, 0xb9, 0xfe, 0x58, 0xad, 0x16, 0x2d, 0x9c, 0xdf, 0x5a, 0x5b,
	0x6a, 0x6d, 0xa9, 0xb4, 0xe5, 0xc2, 0x09, 0xee, 0x6b, 0xe8, 0xf3, 0x9b, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x15, 0x98, 0xf8, 0xa3, 0x6b, 0x02, 0x00, 0x00,
}

func (this *Meta) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Meta)
	if !ok {
		that2, ok := that.(Meta)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.CreatedTime == nil {
		if this.CreatedTime != nil {
			return false
		}
	} else if !this.CreatedTime.Equal(*that1.CreatedTime) {
		return false
	}
	if that1.UpdatedTime == nil {
		if this.UpdatedTime != nil {
			return false
		}
	} else if !this.UpdatedTime.Equal(*that1.UpdatedTime) {
		return false
	}
	if that1.DeletedTime == nil {
		if this.DeletedTime != nil {
			return false
		}
	} else if !this.DeletedTime.Equal(*that1.DeletedTime) {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if this.RequestID != that1.RequestID {
		return false
	}
	return true
}
func (this *Meta) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&metav1.Meta{")
	s = append(s, "CreatedTime: "+fmt.Sprintf("%#v", this.CreatedTime)+",\n")
	s = append(s, "UpdatedTime: "+fmt.Sprintf("%#v", this.UpdatedTime)+",\n")
	s = append(s, "DeletedTime: "+fmt.Sprintf("%#v", this.DeletedTime)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "RequestID: "+fmt.Sprintf("%#v", this.RequestID)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringMeta(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *Meta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Meta) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Meta) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestID) > 0 {
		i -= len(m.RequestID)
		copy(dAtA[i:], m.RequestID)
		i = encodeVarintMeta(dAtA, i, uint64(len(m.RequestID)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Version != 0 {
		i = encodeVarintMeta(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x20
	}
	if m.DeletedTime != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.DeletedTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedTime):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintMeta(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x1a
	}
	if m.UpdatedTime != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedTime):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintMeta(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x12
	}
	if m.CreatedTime != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedTime):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintMeta(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMeta(dAtA []byte, offset int, v uint64) int {
	offset -= sovMeta(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Meta) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreatedTime != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedTime)
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.UpdatedTime != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedTime)
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.DeletedTime != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedTime)
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovMeta(uint64(m.Version))
	}
	l = len(m.RequestID)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	return n
}

func sovMeta(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMeta(x uint64) (n int) {
	return sovMeta(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Meta) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Meta{`,
		`CreatedTime:` + strings.Replace(fmt.Sprintf("%v", this.CreatedTime), "Timestamp", "types.Timestamp", 1) + `,`,
		`UpdatedTime:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedTime), "Timestamp", "types.Timestamp", 1) + `,`,
		`DeletedTime:` + strings.Replace(fmt.Sprintf("%v", this.DeletedTime), "Timestamp", "types.Timestamp", 1) + `,`,
		`Version:` + fmt.Sprintf("%v", this.Version) + `,`,
		`RequestID:` + fmt.Sprintf("%v", this.RequestID) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringMeta(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Meta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Meta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Meta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedTime == nil {
				m.CreatedTime = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedTime == nil {
				m.UpdatedTime = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedTime == nil {
				m.DeletedTime = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.DeletedTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMeta
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMeta(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMeta
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMeta
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMeta
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMeta        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMeta          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMeta = fmt.Errorf("proto: unexpected end of group")
)

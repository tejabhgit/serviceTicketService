// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rps/domains/library/v1/book.proto

package com.rps.domains.library.v1;

public interface BookOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rps.domains.library.v1.Book)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID unique identifier.
   * Read-Only
   * </pre>
   *
   * <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * ID unique identifier.
   * Read-Only
   * </pre>
   *
   * <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * ISBN International Standard Book Number.
   * </pre>
   *
   * <code>string isbn = 2 [json_name = "isbn", (.gogoproto.customname) = "ISBN"];</code>
   * @return The isbn.
   */
  java.lang.String getIsbn();
  /**
   * <pre>
   * ISBN International Standard Book Number.
   * </pre>
   *
   * <code>string isbn = 2 [json_name = "isbn", (.gogoproto.customname) = "ISBN"];</code>
   * @return The bytes for isbn.
   */
  com.google.protobuf.ByteString
      getIsbnBytes();

  /**
   * <pre>
   * Title of the book.
   * </pre>
   *
   * <code>string title = 3 [json_name = "title"];</code>
   * @return The title.
   */
  java.lang.String getTitle();
  /**
   * <pre>
   * Title of the book.
   * </pre>
   *
   * <code>string title = 3 [json_name = "title"];</code>
   * @return The bytes for title.
   */
  com.google.protobuf.ByteString
      getTitleBytes();

  /**
   * <pre>
   * Author of the book.
   * </pre>
   *
   * <code>string author = 4 [json_name = "author"];</code>
   * @return The author.
   */
  java.lang.String getAuthor();
  /**
   * <pre>
   * Author of the book.
   * </pre>
   *
   * <code>string author = 4 [json_name = "author"];</code>
   * @return The bytes for author.
   */
  com.google.protobuf.ByteString
      getAuthorBytes();

  /**
   * <pre>
   * Meta object
   * Read-Only
   * </pre>
   *
   * <code>.rps.types.meta.v1.Meta meta = 100 [json_name = "meta"];</code>
   * @return Whether the meta field is set.
   */
  boolean hasMeta();
  /**
   * <pre>
   * Meta object
   * Read-Only
   * </pre>
   *
   * <code>.rps.types.meta.v1.Meta meta = 100 [json_name = "meta"];</code>
   * @return The meta.
   */
  com.rps.types.library.v1.Meta getMeta();
  /**
   * <pre>
   * Meta object
   * Read-Only
   * </pre>
   *
   * <code>.rps.types.meta.v1.Meta meta = 100 [json_name = "meta"];</code>
   */
  com.rps.types.library.v1.MetaOrBuilder getMetaOrBuilder();
}

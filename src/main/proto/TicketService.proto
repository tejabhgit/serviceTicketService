syntax = "proto3";
option java_multiple_files = true;

package com.example.grpc.server.grpcserver;

message GetTicketByIdRequest {
  string id = 1;

}

message CurrentAgent{
  string userId = 1;
  string firstName = 2;
  string lastName = 3;
  string gravatar = 4;
}

message Category {
  string name = 1;
  string description = 2;
}

message Device {
  string deviceId = 1;
  string hostname = 2;
  string state = 3;
  string os = 4;
}

message TicketContent {
  CurrentAgent currentAgent = 1;
  Category Category = 2;
  Device device = 3;
  string id = 4;
  int32 issueOpened = 5;
  int32 issueClosed = 6;
  string state = 7;
  string description = 8;
}

message Pageable {
  bool last = 1;
  int64 totalElements = 2;
  int64 totalPages = 3;
  int64 numberOfElements = 4;
  bool first = 5;
  int64 number = 6;
  bool empty = 7;
}

message GetTicketByIdResponse {
  string id = 1;
  TicketContent ticketContent = 2;
}

message AddTicketRequest {
  string deviceId = 1;
  string category = 2;
  string description = 3;
}

message AddTicketResponse {
  int32 responseId = 1;
}

message DeleteTicketRequest {
  string id = 1;
}

message DeleteTicketResponse {
  string response = 1;
}

message FindAllTicketsRequest {
  int32 page = 1;
  int32 size = 2;
  string sortBy = 3;
  string direction = 4;
}

message FindAllTicketsResponse {
  TicketContent ticketContent = 1;
  Pageable pageable = 2;
}

service TicketService {
  rpc findAllTickets(FindAllTicketsRequest) returns (stream FindAllTicketsResponse);
  rpc getTicketById(GetTicketByIdRequest) returns (GetTicketByIdResponse);
  rpc addTicket(AddTicketRequest) returns (AddTicketResponse);
  rpc deleteTicket(DeleteTicketRequest) returns (DeleteTicketResponse);

  //submodule from git
  //get from rps-api-proto
}